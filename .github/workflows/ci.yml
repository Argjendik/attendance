name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: attendance_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install Backend Dependencies
      working-directory: backend
      run: npm ci
      
    - name: Run Backend Tests
      working-directory: backend
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/attendance_test
      run: |
        npx prisma generate
        npx prisma migrate deploy
        npm test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install Frontend Dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Run Frontend Tests
      working-directory: frontend
      run: npm test

  build:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Build Backend
      working-directory: backend
      run: |
        npm ci
        npm run build
        
    - name: Build Frontend
      working-directory: frontend
      run: |
        npm ci
        npm run build 