generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  offices   Office[] @relation("UserOffices")
}

model Agent {
  id                Int                @id @default(autoincrement())
  name              String
  rfidCode          String?            @unique
  email             String?            @unique
  status            String             @default("ACTIVE")
  officeId          Int
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  office            Office             @relation(fields: [officeId], references: [id])
  attendanceRecords AttendanceRecord[]
}

model Office {
  id               Int      @id @default(autoincrement())
  name             String
  location         String
  checkInMethods   String[] @default(["MANUAL", "RFID"])
  expectedCheckIn  String   @default("09:00")
  expectedCheckOut String   @default("17:00")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  agents           Agent[]
  users            User[]   @relation("UserOffices")
}

model AttendanceRecord {
  id           Int       @id @default(autoincrement())
  agentId      Int
  action       String
  timestamp    DateTime  @default(now())
  source       String
  recordedBy   String?
  expectedIn   String
  expectedOut  String
  status       String?
  lastCheckIn  DateTime?
  workingHours Float?
  agent        Agent     @relation(fields: [agentId], references: [id])
}
